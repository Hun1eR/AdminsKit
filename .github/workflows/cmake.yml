name: CMake

env:
  publish_dir: publish

on:
  push:
    paths-ignore:
    - 'third_party/**'
    - '.gitattributes'
    - '.gitignore'
    - '**.md'
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.os == 'ubuntu-latest' && 'hun1er/ubuntu-gcc-clang-intel:latest' || null }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Build
      if: matrix.os == 'ubuntu-latest'
      run: |
        . /opt/intel/oneapi/setvars.sh ia32
        cmake --preset linux-ci
        cmake --build --preset linux-ci --parallel $(nproc)

    - name: Build
      if: matrix.os == 'windows-latest'
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
        cmake --preset windows-ci
        cmake --build --preset windows-ci
      shell: cmd

    - name: Import environment variables
      run: cat "${{ env.publish_dir }}/github.env" >> $GITHUB_ENV
      shell: bash

    - name: Publish
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.artifacts_zip_name }}
        path: |
          ${{ env.publish_dir }}/
          !${{ env.publish_dir }}/*.env
